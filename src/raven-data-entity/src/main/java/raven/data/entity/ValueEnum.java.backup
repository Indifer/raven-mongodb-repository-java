package raven.data.entity;

import java.util.HashMap;

public class ValueEnum extends Number implements Comparable<ValueEnum> {

    private static HashMap<Integer, ValueEnum> values;

    private final int value;
    private final String name;

    public int getValue() {
        return value;
    }

    public String getName() {
        return name;
    }

    public ValueEnum(int value, String name) {
        this.value = value;
        this.name = name;
    }

    @Override
    public int compareTo(ValueEnum o) {
        return Integer.compare(this.value, o.getValue());
    }

    @Override
    public int intValue() {
        return (int) value;
    }

    @Override
    public long longValue() {
        return (long) value;
    }

    @Override
    public float floatValue() {
        return (float) value;
    }

    @Override
    public double doubleValue() {
        return (double) value;
    }

    @Override
    public String toString() {
        return Integer.toString(value);
    }

    public static <T extends ValueEnum> T valueOf(Class<T> clazz, int value) {
        clazz.getConstructor()
    }
}
